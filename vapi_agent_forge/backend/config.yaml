assistant:
  name: "LangGraph Research Assistant"
  model:
    provider: "openai"
    model: "gpt-4o-mini"
    messages:
      - role: "system"
        content: >
          You are a specialized AI assistant for the LangGraph research system. Your goal is to accurately trigger the correct tool based on the user's request.

          CRITICAL RULES:
          1. If the user requests research on a specific topic, use 'langgraph_quick_research' for fast results.
          2. If the user wants content generated or written, use 'langgraph_generate' with appropriate parameters.
          3. For ALL OTHER requests, including simple questions, greetings, or ambiguous commands, you MUST use the 'langgraph_chat' tool. Do not try to answer yourself.
          4. The user's ID is {user_id}.

          Example 1: User says "Research artificial intelligence". You should call 'langgraph_quick_research'.
          Example 2: User says "Write a summary about Tesla". You should call 'langgraph_generate'.
          Example 3: User says "What's the weather?" or "Hello there". You MUST call 'langgraph_chat'.

  voice:
    provider: "playht"
    voiceId: "jennifer-playht"
  
  firstMessage: "LangGraph research system online. How can I assist you with research or content generation?"

tools:
  - name: "langgraph_quick_research"
    description: "Use this specific tool to run quick research on any topic. Provides fast, reliable research results."
    parameters:
      type: "object"
      properties:
        query:
          type: "string"
          description: "The research query or question, e.g., 'artificial intelligence trends'."
      required: ["query"]
    action:
      type: "api_call"
      method: "POST"
      url: "https://d6c5-2603-8000-baf0-4690-4c7d-38bd-11e8-5920.ngrok-free.app/quick-research"
      json_body:
        query: "{query}"
        research_type: "quick"
        max_sources: 2
        include_summary: true
      response_template: "üîç Research completed: {summary}"

  - name: "langgraph_generate"
    description: "Use this tool to generate content like articles, summaries, or reports on specific topics."
    parameters:
      type: "object"
      properties:
        topic:
          type: "string"
          description: "The topic for content generation, e.g., 'Tesla financial performance'."
        content_type:
          type: "string"
          description: "The type of content to generate."
          enum: ["article", "blog", "summary", "report"]
          default: "summary"
        tone:
          type: "string"
          description: "The tone of the content."
          enum: ["professional", "casual", "academic", "creative"]
          default: "professional"
        length:
          type: "string"
          description: "The length of the content."
          enum: ["short", "medium", "long"]
          default: "short"
      required: ["topic"]
    action:
      type: "api_call"
      method: "POST"
      url: "https://d6c5-2603-8000-baf0-4690-4c7d-38bd-11e8-5920.ngrok-free.app/generate-content"
      json_body:
        topic: "{topic}"
        content_type: "{content_type}"
        tone: "{tone}"
        length: "{length}"
      response_template: "‚úçÔ∏è Content generated: {content}"

  - name: "langgraph_chat"
    description: "A general-purpose tool for all other requests, simple questions, greetings, or ambiguous commands that do not fit specific research or content generation."
    parameters:
      type: "object"
      properties:
        message:
          type: "string"
          description: "The user's full, verbatim request."
        context:
          type: "string"
          description: "Optional context for the conversation."
          default: ""
      required: ["message"]
    action:
      type: "api_call"
      method: "POST"
      url: "https://d6c5-2603-8000-baf0-4690-4c7d-38bd-11e8-5920.ngrok-free.app/vapi-webhook"
      json_body:
        message:
          content: "{message}"
          context: "{context}"
        call: null
      response_template: "üí¨ {response}"